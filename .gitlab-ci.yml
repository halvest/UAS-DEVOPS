stages:
  - test
  - analyze
  - build
  - deploy

unit_test:
  stage: test
  tags: [local-shell]
  script:
    - npm install
    - npm test

sonarqube_analysis:
  stage: analyze
  tags: [local-shell]
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  script:
    - sonar-scanner -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=proyek-logincicd
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

build_docker_image:
  stage: build
  tags: [local-shell]
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

deploy_to_minikube:
  stage: deploy
  tags: [local-shell]
  script:
    - kubectl set image deployment/login-app-deployment web-app=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'